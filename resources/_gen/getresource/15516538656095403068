HTTP/2.0 200 OK
Accept-Ranges: bytes
Age: 0
Cache-Control: public,max-age=0,must-revalidate
Cache-Status: "Netlify Edge"; fwd=miss
Content-Type: text/html; charset=UTF-8
Date: Tue, 15 Oct 2024 14:31:19 GMT
Etag: "4a0af50b7bfa8365e1b36cfce7e138a3-ssl-df"
Server: Netlify
Strict-Transport-Security: max-age=31536000
Vary: Accept-Encoding
X-Etags-1: "4a0af50b7bfa8365e1b36cfce7e138a3-ssl-df"
X-Etags-2: "4a0af50b7bfa8365e1b36cfce7e138a3-ssl-df"
X-Nf-Request-Id: 01JA89EAYS35FQD3EHCRV43MX1

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us" lang="en-us">
<head>
<link href="//gmpg.org/xfn/11" rel="profile">
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta name="generator" content="Hugo 0.85.0" /><meta name="twitter:card" content="summary_large_image"/>
<meta name="twitter:image" content="/images/avatar.png"/><meta name="twitter:title" content="jbowen.dev"/>
<meta name="twitter:description" content="Thoughts and musings"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"><title>jbowen.dev</title>
<link type="text/css" rel="stylesheet" href="/css/print.css" media="print">
<link type="text/css" rel="stylesheet" href="/sass/hyde.min.css">
<link type="text/css" rel="stylesheet" href="/css/syntax.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Abril+Fatface|PT+Sans:400,400i,700">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/solid.min.css" integrity="sha512-QN7X/bUbbeel9bbq6JVNJXk1Zowt+n+QPN+DjhEmTa4TdL1YPCsCey5JrvfRW8xp28LDYgGG/waNVdrhwMQmVQ==" crossorigin="anonymous" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/brands.min.css" integrity="sha512-AMDXrE+qaoUHsd0DXQJr5dL4m5xmpkGLxXZQik2TvR2VCVKT/XRPQ4e/LTnwl84mCv+eFm92UG6ErWDtGM/Q5Q==" crossorigin="anonymous" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/fontawesome.min.css" integrity="sha512-8jdwayz5n8F2cnW26l9vpV6+yGOcRAqz6HTu+DQ3FtVIAts2gTdlFZOGpYhvBMXkWEgxPN3Y22UWyZXuDowNLA==" crossorigin="anonymous" />

<link rel="apple-touch-icon-precomposed" sizes="144x144" href="/apple-touch-icon-144-precomposed.png">
<link rel="shortcut icon" href="/favicon.png">
<link href="/index.xml" rel="alternate" type="application/rss+xml" title="jbowen.dev" />
<script>
function toggle_collapse() {
  if (!sessionStorage.collapsed || sessionStorage.collapsed != "true") {
    sessionStorage.collapsed = "true";
  } else {
    sessionStorage.collapsed = "false";
  }
  set_collapsed_state()
}

function set_collapsed_state() {
  if (!sessionStorage.collapsed || sessionStorage.collapsed != "true") {
    document.body.classList.remove("sidebar-collapsed");
  } else {
    document.body.classList.add("sidebar-collapsed");
  }
}

function toggle_dark() {
  if (!sessionStorage.dark || sessionStorage.dark != "true") {
    sessionStorage.dark = "true"
  } else {
    sessionStorage.dark = "false"
  }
  set_dark_state();
}

function set_dark_state() {
  if (!sessionStorage.dark || sessionStorage.dark != "true") {
    document.body.classList.remove("dark");
  } else {
    document.body.classList.add("dark");
  }
}
</script></head>

<body>
<script>
  set_dark_state();
  set_collapsed_state();
</script>

<aside class="sidebar" id="sidebar">

<div class="collapse-toggle">
  <i id="collapse-toggle-left" class="fas fa-caret-square-left" onclick="toggle_collapse()"></i>
  <i id="collapse-toggle-right" class="fas fa-caret-square-right" onclick="toggle_collapse()"></i>
</div>

<div class="container sidebar-sticky">
  <div class="sidebar-about">
    
    <div class="author-image">
      <img src="/images/avatar.png" alt="Author Image" class="author-image">
    </div>
    
    <a href="/"><h1>jbowen.dev</h1></a>
    <p class="lead">
     Thoughts and musings 
    </p>
  </div>
  <nav>
    <ul class="sidebar-nav">
      <li><a href="/">Home</a> </li>
      <li><a href="/posts/"> Posts </a></li>
      <li><a href="/projects/"> Projects </a></li>
      <li><a href="/tips/"> Tips </a></li>
      <li><a href="/topics/"> Topics </a></li>
      <li><a href="/about/"> About </a></li></ul>
  </nav>
  
  <div class="social">
	<a href="https://tech.lgbt/@jessica" rel="me"><i class="fab fa-mastodon fa-lg" aria-hidden="true"></i></a>
	
	<a href="https://github.com/nullvoidptr" rel="me"><i class="fab fa-github fa-lg" aria-hidden="true"></i></a>
	
	<a href="https://linkedin.com/in/jessica-b-1212493" rel="me"><i class="fab fa-linkedin fa-lg" aria-hidden="true"></i></a>
	
	<a href="mailto:me@jbowen.dev" rel="me"><i class="fas fa-envelope fa-lg" aria-hidden="true"></i></a>
	</div>

  <p class="copyright">&copy; 2024. All rights reserved. </p>
</div>
</aside>

<main class="content container"><div class="posts">



<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1543966888-6e858b90d30d?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@pinjasaur">Paul Esch-Laurent</a> <a href="https://unsplash.com/photos/zZlEcBxJ_Sw">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2020/07/using-go-vanity-urls-with-hugo/">Using Go Vanity URLs with Hugo</a></h1>
<div class="post-date">
<time datetime=2020-07-01T08:04:58-0700  class="date-posted">Wed, Jul 1, 2020</time></div>

<ul id="topics">
  <li><a href="/topics/devops">devOps</a></li>
  <li><a href="/topics/go">go</a></li>
  <li><a href="/topics/hugo">Hugo</a></li>
  <li><a href="/topics/netlify">Netlify</a></li>
</ul>

<p>Go vanity import URLs are useful tools for maintaining a consistent
import path for public Go packages, even if one changes code repository
location. In this article, I show how to set up vanity URLs in a website
built by Hugo and deployed on Netlify for Go packages hosted on a
third-party site such as GitLab or GitHub.</p>

<div class="read-more-link"><a href="/2020/07/using-go-vanity-urls-with-hugo/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1533749047139-189de3cf06d3?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@jontyson">Jon Tyson</a> <a href="https://unsplash.com/photos/FlHdnPO6dlw">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2020/05/remote-time-machine-for-multiple-macs/">Remote Time Machine for Multiple Macs</a></h1>
<div class="post-date">
<time datetime=2020-05-08T13:45:15-0700  class="date-posted">Fri, May 8, 2020</time></div>

<ul id="topics">
  <li><a href="/topics/backup">backup</a></li>
  <li><a href="/topics/nas">nas</a></li>
  <li><a href="/topics/synology">synology</a></li>
  <li><a href="/topics/time-machine">Time Machine</a></li>
</ul>

<p>Time Machine, the built-in backup tool for MacOS, makes it relatively
straightforward to set up a network share to be a backup target for a
Mac computer. However, there are difficulties when trying
to use the same share to backup multiple Mac systems.
In this article, I highlight some of the issues and solutions
associated with more than one computer running Time Machine backing up
to a single network share.</p>

<div class="read-more-link"><a href="/2020/05/remote-time-machine-for-multiple-macs/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1567633989312-2465964633a3?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@jamesbo13">James Bowen</a> <a href="https://unsplash.com/photos/-ghQgZD8muE">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2020/01/exploring-the-synology-photostation-api/">Exploring the Synology PhotoStation API</a></h1>
<div class="post-date">
<time datetime=2020-01-18T09:12:51-0800  class="date-posted">Sat, Jan 18, 2020</time></div>

<ul id="topics">
  <li><a href="/topics/documentation">documentation</a></li>
  <li><a href="/topics/photostation">photostation</a></li>
  <li><a href="/topics/rest">REST</a></li>
  <li><a href="/topics/synology">synology</a></li>
</ul>

<p>I&rsquo;ve started to use <a href="https://www.synology.com/en-us/dsm/feature/photo_station">PhotoStation</a>
on my <a href="https://www.synology.com/">Synology</a> NAS device at home to organize my photos
and provide easy means to access remotely. I have been quite pleased overall, especially
with the integration with the DS Photo app which can sync photos from an iPhone&rsquo;s camera
roll to the Synology NAS.</p>
<p>I was looking for an automated way to sort my photos into a hierarchy of folders by date.
Unable to find a built-in way to do this or any public documentation for the PhotoStation API, I
set about to explore the API and see what I could figure out.</p>

<div class="read-more-link"><a href="/2020/01/exploring-the-synology-photostation-api/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1572583860281-a78290d07ae3?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@garricko">Garrick Sangil</a> <a href="https://unsplash.com/photos/4snbwc_Vz-U">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/11/bash-command-line-completion-with-go/">Bash Command-line Completion with Go</a></h1>
<div class="post-date">
<time datetime=2019-11-08T13:14:30-0700  class="date-posted">Fri, Nov 8, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/bash">bash</a></li>
  <li><a href="/topics/cli">cli</a></li>
  <li><a href="/topics/go">go</a></li>
  <li><a href="/topics/programming">programming</a></li>
</ul>

<p>Command-line completion is a helpful feature in many modern shells,
providing users with a helpful means of typing potentially complex commands
quickly and accurately. In this article I show how to add completion
to Go programs when run from the Bash shell.</p>

<div class="read-more-link"><a href="/2019/11/bash-command-line-completion-with-go/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1568164528001-fdf61ebe1a7e?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@nate_dumlao">Nathan Dumlao</a> <a href="https://unsplash.com/photos/CQfBQ3mzqu0">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/09/the-magic-of-go-comments/">The Magic of Go Comments</a></h1>
<div class="post-date">
<time datetime=2019-09-30T15:28:26-0700  class="date-posted">Mon, Sep 30, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/go">go</a></li>
  <li><a href="/topics/programming">programming</a></li>
</ul>

<p>Comments are a valuable tool for documenting and communicating
information about code. They are a common feature
in nearly every programming language and Go is no exception. However,
comments in Go programs can do far more than providing
information readers of the code.
In this article I will highlight some lesser known uses of comments
within Go that have special &ndash; almost magical &ndash; behavior.</p>

<div class="read-more-link"><a href="/2019/09/the-magic-of-go-comments/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1567643109077-89ab1037f492?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@jamesbo13">James Bowen</a> <a href="https://unsplash.com/photos/1Olf7LrGAh4">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/09/using-so_peercred-in-go/">Using SO_PEERCRED in Go</a></h1>
<div class="post-date">
<time datetime=2019-09-11T16:30:28-0700  class="date-posted">Wed, Sep 11, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/go">go</a></li>
  <li><a href="/topics/networking">networking</a></li>
  <li><a href="/topics/sockets">sockets</a></li>
</ul>

<p>At this year&rsquo;s <a href="https://twitter.com/GopherCon">GopherCon</a>,
Gabbi Fisher (<a href="https://twitter.com/gabbifish/">@gabbifish</a>)
of CloudFlare made a great presentation introducing her audience to the
complexities of network socket options in Go (archived video of her
presentation <a href="https://www.youtube.com/watch?v=pGR3r0UhoS8">here</a>). In her
talk, Gabbi details how to use the network socket option <code>SO_REUSEADDR</code>
to allow multiple processes on the same server to listen on the
same network port. Gabbi closes by mentioning the breadth of socket options
that are available beyond just her example. Inspired by her talk, I&rsquo;ve decided
to write about the <code>SO_PEERCRED</code> socket option and Go.</p>

<div class="read-more-link"><a href="/2019/09/using-so_peercred-in-go/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1533118834184-62f7288ea0e6?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@carlesrgm">Carles Rabada</a> <a href="https://unsplash.com/photos/05ci_hxKWr4">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/08/using-page-bundles-to-organize-resources/">Using Page Bundles to Organize Resources</a></h1>
<div class="post-date">
<time datetime=2019-08-26T14:11:32-0700  class="date-posted">Mon, Aug 26, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/blog">blog</a></li>
  <li><a href="/topics/hugo">hugo</a></li>
</ul>

<p>Last year, <a href="https://gohugo.io">Hugo</a> introduced the concept of page bundles. Page bundles
give website authors a new way to organize all the resources (.md files, images, etc&hellip;)
of a page together. In this article, I show how I transitioned some of my existing posts
to use page bundles without changing the final website layout and appearance.</p>

<div class="read-more-link"><a href="/2019/08/using-page-bundles-to-organize-resources/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1562944761-e3150b7ef640?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@ling_gigi">Gigi</a> <a href="https://unsplash.com/photos/K_4P5elWHFk">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/08/using-go-flags-in-tests/">Using Go Flags in Tests</a></h1>
<div class="post-date">
<time datetime=2019-08-21T10:26:19-0700  class="date-posted">Wed, Aug 21, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/go">go</a></li>
  <li><a href="/topics/testing">testing</a></li>
</ul>

<p>Many developers are familiar with the <a href="https://godoc.org/flag">flag package</a> from
the Go standard library. This package provides an easy method for adding command
line options and argument parsing for Go programs. What may not be as well known
is that flag can be used in Go unit tests as well.</p>

<div class="read-more-link"><a href="/2019/08/using-go-flags-in-tests/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1515524738708-327f6b0037a7?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@markusspiske">Markus Spiske</a> <a href="https://unsplash.com/photos/466ENaLuhLY">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/08/starting-a-blog-part-4-custom-domain/">Starting a Blog - Part 4: Custom Domain</a></h1>
<div class="post-date">
<time datetime=2019-08-15T19:27:35-0700  class="date-posted">Thu, Aug 15, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/blog">blog</a></li>
  <li><a href="/topics/hugo">hugo</a></li>
  <li><a href="/topics/netlify">netlify</a></li>
</ul>

<p>One of the last steps to publishing my blog is to assign my custom domain name to it.
I previously acquired the domain <code>jbowen.dev</code> from <a href="https://www.domains.google">Google Domains</a>
and want to use that for my blog. This is supported easily by Netlify and this post
details how it can be set up.</p>

<div class="read-more-link"><a href="/2019/08/starting-a-blog-part-4-custom-domain/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1541524628935-fabc748e27db?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@vanveenjf">VanveenJF</a> <a href="https://unsplash.com/photos/FrUsD5obrHA">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/08/starting-a-blog-part-3-deploying/">Starting a Blog - Part 3: Deploying</a></h1>
<div class="post-date">
<time datetime=2019-08-13T14:47:45-0700  class="date-posted">Tue, Aug 13, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/blog">blog</a></li>
  <li><a href="/topics/hugo">hugo</a></li>
  <li><a href="/topics/netlify">netlify</a></li>
</ul>

<p>Following <a href="/2019/08/starting-a-blog-part-1-hugo/">part 1</a> and <a href="/2019/08/starting-a-blog-part-2-customization/">part 2</a>
of this series, we have now set up hugo locally, created our first post and customized our theme to
match our desired appearance. Next step is to deploy our content to a webserver so it is accessible
to the outside world.</p>

<div class="read-more-link"><a href="/2019/08/starting-a-blog-part-3-deploying/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1559454510-9faafe42764c?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@dustintramel">Dustin Tramel</a> <a href="https://unsplash.com/photos/t3D5rHYQXAk">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/08/starting-a-blog-part-2-customization/">Starting a Blog - Part 2: Customization</a></h1>
<div class="post-date">
<time datetime=2019-08-09T14:04:51-0700  class="date-posted">Fri, Aug 9, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/blog">blog</a></li>
  <li><a href="/topics/hugo">hugo</a></li>
</ul>

<p>This is the second part of my blog feature on setting up a blog using
<a href="https://gohugo.io">Hugo</a> and <a href="https://netlify.com">Netlify</a>.
In <a href="/2019/08/starting-a-blog-part-1-hugo/">part 1</a>, I discussed installing Hugo and
the Hyde theme and adding an initial post. We then used the <code>hugo server</code>
command to create a live version of the website to view locally. This post
will discuss various means on how to customize the appearance of the generated
blog.</p>

<div class="read-more-link"><a href="/2019/08/starting-a-blog-part-2-customization/">Read More…</a></div>
</article>

<article class="post"><div class="header-image">
<img src="https://images.unsplash.com/photo-1478391679764-b2d8b3cd1e94?ixlib=rb-1.2.1&auto=format&fit=crop&h=600&q=80">
<div class="header-image-caption">
Photo by: <a href="https://unsplash.com/@peterlaster">Pedro Lastra</a> <a href="https://unsplash.com/photos/suRvdiwP9Pk">(original)</a>
</div>

</div><h1 class="post-title"><a href="/2019/08/starting-a-blog-part-1-hugo/">Starting a Blog - Part 1: Hugo</a></h1>
<div class="post-date">
<time datetime=2019-08-08T09:42:39-0700  class="date-posted">Thu, Aug 8, 2019</time></div>

<ul id="topics">
  <li><a href="/topics/blog">blog</a></li>
  <li><a href="/topics/hugo">hugo</a></li>
</ul>

<p>This is the first of several posts that will discuss how to set up a new blog using Hugo and Netlify.
I will discuss the steps taken to create this blog and publish it to a custom domain.</p>

<div class="read-more-link"><a href="/2019/08/starting-a-blog-part-1-hugo/">Read More…</a></div>
</article>









</div></main>
<script type="application/javascript">
var doNotTrack = false;
if (!doNotTrack) {
	window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
	ga('create', 'UA-147747390-1', 'auto');
	
	ga('send', 'pageview');
}
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>
</body>
</html>
